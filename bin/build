#!/bin/bash

#
# Build Eclipse plug-in and generate update site.
#

set -e

if [[ ! -d "$ECLIPSE" ]]; then
  echo "Usage: ECLIPSE=/path/to/eclipse/dir $0"
  exit 1
fi

# Find the headless PDE buildfile
launcher=org.eclipse.equinox.launcher_1.5
pde_build=org.eclipse.pde.build_3.10
scripts=({$HOME/.p2/pool/plugins/$pde_build.*,"$ECLIPSE"/plugins/$pde_build.*}/scripts/build.xml)
found=(${scripts[@]##*\**}) # filter paths with unexpanded wildcard
buildfile="${found[@]: -1}" # take the last one

# Find and clean the build directory
BUILD=$(cd `dirname "$0"`/../build && pwd)

rm -rf "$BUILD/output" && mkdir "$BUILD/output"

# Copy feature & plug-in sources to build output dir
#  - include library JARs
#  - rename e.g. plugin -> plugins/constellation.plugin
COPYFILE_DISABLE=1 tar cv -T <(git ls-files -- feature
                               git ls-files -- plugin | fgrep -v plugin/eea/
                               ls plugin/lib/*.jar) \
                          -s '%^\(feature\)*\(plugin\)*%~s/constellation.~%' |
                   tar x -C "$BUILD/output"

# Replace default settings
cp "$BUILD/defaults.properties" "$BUILD/output/plugins/constellation.plugin/src/constellation/prefs/"

# Run the headless PDE build
java -jar "$ECLIPSE"/plugins/$launcher.*.jar \
     -data "$BUILD/output/workspace" \
     -application org.eclipse.ant.core.antRunner \
     -buildfile "$buildfile" \
     -Dbuilder="$BUILD" -DbaseLocation="$HOME/.p2/pool" \
     "$@"

# Fix site name
sed -i '' -e "/<repository/s/'file:[^']*'/'Constellation'/" "$BUILD"/output/site/*.xml

# Record version number
fgrep .feature= "$BUILD/output/finalFeaturesVersions.properties" | cut -f2 -d= > "$BUILD/output/site/version.txt"

# Sanity-check the result

echo $'\n'Versions:
"`dirname "$0"`/version"

echo $'\n'Contents:
for jar in "$BUILD"/output/site/*/*.jar; do
  echo $jar
  unzip -qql "$jar" | awk '{ print $4 }' | grep -v '/$' | sort
done

echo $'\n'Config:
for jar in "$BUILD"/output/site/plugins/*.jar; do
  unzip -qqc "$jar" '*/defaults.properties'
done
